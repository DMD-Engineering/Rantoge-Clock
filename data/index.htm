<!DOCTYPE HTML>
<html>
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
      html {font-family: Arial; display: inline-block; text-align: center;}
      h2 {font-size: 3.0rem;}
      p {font-size: 3.0rem;}
      body {max-width: 600px; margin:0px auto; padding-bottom: 25px;}
      .switch {position: relative; display: inline-block; width: 120px; height: 68px} 
      .switch input {display: none}
      .slider {position: absolute; top: 0; left: 0; right: 0; bottom: 0; background-color: #ccc; border-radius: 34px}
      .slider:before {position: absolute; content: ""; height: 52px; width: 52px; left: 8px; bottom: 8px; background-color: #fff; -webkit-transition: .4s; transition: .4s; border-radius: 68px}
      input:checked+.slider {background-color: #2196F3}
      input:checked+.slider:before {-webkit-transform: translateX(52px); -ms-transform: translateX(52px); transform: translateX(52px)}
    </style>
  </head>
  <body>
    <h2>Clock Control Server</h2>
    __________ Clock State __________<span id="TimeValue">0</span><br>
    %DATAPLACEHOLDER%<br>
    <form>
      Clock Command: <input type="text" id="userCommand" name="userCommand">
      <button onClick="sendCmd()" type="button" style="margin:5px;" name="execute" value="set">Execute</button>
    </form>
    <span id="StatusValue" style="margin:5px;">Command status: READY</span><br><br>
    <form>
      <label for="timeInput" style="margin:5px;">Time Now:</label>
      <input type="time" style="margin:5px;" id="timeInput" name="time" pattern="[0-9]{2}:[0-9]{2}" required>
      <button onClick="sendClockTime()" type="button" style="margin:5px;" name="execute" value="time">Set</button>
    </form>
    <form>
      <button onClick="sendExe_set()" type="button" style="margin:5px;" name="cmd" value="set">Sync Clock Time</button>
    </form>
    <form action="/exe">
      <button onClick="sendExe_calm()" type="button" style="margin:5px;" name="cmd" value="calm">Calibrate Minute</button>
    </form>
    <form action="/exe">
      <button onClick="sendExe_calh()" type="button" style="margin:5px;" name="cmd" value="calh">Calibrate Hour</button>
    </form>
    <form action="/exe">
      <button onClick="sendExe(this.value)" type="button" style="margin:5px;" name="cmd" value="h">Advance Hour</button>
    </form>
    <form action="/exe">
      <button onClick="sendExe(this.value)" type="button" style="margin:5px;" name="cmd" value="m">Advance Minute</button>
    </form>
    <form action="/exe">
      <button onClick="sendExe(this.value)" type="button" style="margin:5px;" name="cmd" value="h 20">Move Hour</button>
    </form>
    <form action="/exe">
      <button onClick="sendExe(this.value)" type="button" style="margin:5px;" name="cmd" value="m 20">Move Minute</button>
    </form><br>
    <script>
      var ntpOK;
      var calOK;
      function sendExe(cmdStr) {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {
            document.getElementById("StatusValue").innerHTML = this.responseText;
          }
        };
        xhttp.open("GET", "/exe?cmd=" + cmdStr, true);
        xhttp.send();
      }
      function sendExe_set() {
        if ((ntpOK > 0) && (calOK > 0)) sendExe("set"); 
        else if ((ntpOK > 0) && (calOK == -1))
        {
          let clockTime = prompt("Enter time displayed on clock (HH:MM):", "");
          if (clockTime != null && clockTime != "")
            sendExe("set " + clockTime); 
        }
        else if ((ntpOK == -1) && (calOK == -1))
        {
          let clockTime = prompt("Enter time displayed on clock (HH:MM):", "");
          const d = new Date();
          if (clockTime != null && clockTime != "")
            sendExe("set " + clockTime + " " + d.getHours() + ":" + d.getMinutes()); 
        }
        else if ((ntpOK == -1) && (calOK > 0))
        {
          /*
          let nowTime = prompt("Enter current time (HH:MM:SS):", "");
          if (nowTimeTime != null && nowTime != "")
            sendExe("set -1:-1 " + nowTime);
          */
          const d = new Date();
          sendExe("set -1:-1 " + d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds()); 
        }
      }
      function sendExe_calh() {
        let clockTime = prompt("Enter time displayed on clock (HH:MM):", "");
        if (clockTime != null && clockTime != "")
            sendExe("calh " + clockTime); 
      }
      function sendExe_calm() {
        let clockTime = prompt("Enter time displayed on clock (HH:MM):", "");
        if (clockTime != null && clockTime != "")
          sendExe("calm " + clockTime + " 120000"); 
      }
      function sendCmd() {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {
            document.getElementById("StatusValue").innerHTML = this.responseText;
          }
        };
        xhttp.open("GET", "/exe?cmd=" + document.getElementById("userCommand").value, true);
        xhttp.send();
      }
      function sendClockTime() {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {
            document.getElementById("StatusValue").innerHTML = this.responseText;
          }
        };
        const d = new Date();
        let sec = Math.round(d.getTime() / 1000) % 60;
        xhttp.open("GET", "/exe?cmd=time " + document.getElementById("timeInput").value + ":" + sec, true);
        xhttp.send();
      }
      function getStatus() {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {
            document.getElementById("StatusValue").innerHTML = this.responseText;
          }
        };
        xhttp.open("GET", "/status", true);
        xhttp.send();
      }
      function getData() {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {
            document.getElementById("TimeValue").innerHTML = this.responseText;
            ntpOK = this.responseText.indexOf("NTP Sync: YES");
            calOK = this.responseText.indexOf("Calibrated: YES");
          }
        };
        xhttp.open("GET", "/time", true);
        xhttp.send();
      }
      function tick() {
        const d = new Date();
        let secs = d.getSeconds();
        let mins = d.getMinutes();
        getData();
        getStatus();
      }
      setInterval(tick, 1000);
      window.addEventListener("load", function(){
        getData();
        getStatus();
      });
    </script>
  </body>
</html>
